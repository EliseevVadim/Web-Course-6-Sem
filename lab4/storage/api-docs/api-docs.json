{
    "openapi": "3.0.0",
    "info": {
        "title": "PizzGram Api Documentation",
        "description": "L5 Swagger PizzGram Api description",
        "contact": {
            "email": "eliseevv02@mail.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "PizzGram API Server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Login for api-calls",
                "description": "Authorizes the user",
                "operationId": "signIn",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The Token Request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "your@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "YOUR_PASSWORD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User signed in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Register for api-calls",
                "description": "Registers the user",
                "operationId": "signUp",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confirm_password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The user registration request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "The Architect"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "your@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "YOUR_PASSWORD"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "YOUR_PASSWORD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Logout the user",
                "description": "Logouts the user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/carts": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get list of all carts",
                "description": "Returns list of carts",
                "operationId": "getAllCarts",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Carts"
                ],
                "summary": "Add new cart",
                "description": "Adds new cart",
                "operationId": "addCart",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "Owners id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The cart was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_category": {
                                            "$ref": "#/components/schemas/Cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/carts/{id}": {
            "get": {
                "tags": [
                    "Carts"
                ],
                "summary": "Get one cart by id",
                "description": "Returns object of cart",
                "operationId": "getCartById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cart": {
                                            "$ref": "#/components/schemas/Cart"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Cart does not exist."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Carts"
                ],
                "summary": "Update existing cart",
                "description": "Returns updated cart data",
                "operationId": "updateCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "New owners id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": "316"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The cart was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cart"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Carts"
                ],
                "summary": "Delete cart by id",
                "description": "Deletes cart by id",
                "operationId": "deleteCart",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Cart id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The cart was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/checkouts": {
            "get": {
                "tags": [
                    "Checkouts"
                ],
                "summary": "Get list of all checkouts",
                "description": "Returns list of checkouts",
                "operationId": "getAllCheckouts",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Checkouts"
                ],
                "summary": "Add new checkout",
                "description": "Adds new checkout",
                "operationId": "addCheckout",
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "path",
                        "description": "Id of cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_state_id",
                        "in": "path",
                        "description": "Id of checkout state",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sum",
                        "in": "path",
                        "description": "Final checkout cost",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "checkout_state_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The checkout was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkout": {
                                            "$ref": "#/components/schemas/Checkout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/checkouts/{id}": {
            "get": {
                "tags": [
                    "Checkouts"
                ],
                "summary": "Get one checkout by id",
                "description": "Returns object of checkout",
                "operationId": "getCheckoutById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Checkout id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkout": {
                                            "$ref": "#/components/schemas/Checkout"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Checkouts"
                ],
                "summary": "Update existing checkout",
                "description": "Returns updated checkout data",
                "operationId": "updateCheckout",
                "parameters": [
                    {
                        "name": "cart_id",
                        "in": "path",
                        "description": "Id of cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "checkout_state_id",
                        "in": "path",
                        "description": "Id of checkout state",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sum",
                        "in": "path",
                        "description": "Final checkout cost",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "checkout_state_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The checkout was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Checkout"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Checkouts"
                ],
                "summary": "Delete checkout by id",
                "description": "Deletes checkout by id",
                "operationId": "deleteCheckout",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Checkout id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The checkout was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/checkout-states": {
            "get": {
                "tags": [
                    "Checkout states"
                ],
                "summary": "Get list of all checkout states",
                "description": "Returns list of checkout states",
                "operationId": "getAllCheckoutStates",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Checkout states"
                ],
                "summary": "Add new checkout state",
                "description": "Adds new checkout state",
                "operationId": "addCheckoutState",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Checkout state name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some checkout state"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The checkout state was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkout-state": {
                                            "$ref": "#/components/schemas/CheckoutState"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/checkout-states/{id}": {
            "get": {
                "tags": [
                    "Checkout states"
                ],
                "summary": "Get one checkout state by id",
                "description": "Returns object of checkout state",
                "operationId": "getCheckoutStateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Checkout state id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "checkout-state": {
                                            "$ref": "#/components/schemas/CheckoutState"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Checkout states"
                ],
                "summary": "Update existing checkout state",
                "description": "Returns updated checkout state data",
                "operationId": "updateCheckoutState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Checkout state id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Checkout state name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some checkout state"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The checkout state was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckoutState"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Checkout states"
                ],
                "summary": "Delete checkout state by id",
                "description": "Deletes checkout state by id",
                "operationId": "deleteCheckoutState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Checkout state id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The checkout state was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of all orders",
                "description": "Returns list of orders",
                "operationId": "getAllOrders",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Add new order",
                "description": "Adds new order",
                "operationId": "addOrder",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Ordered product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "path",
                        "description": "Quantity of ordered product units",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sum",
                        "in": "path",
                        "description": "Sum of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cart_id",
                        "in": "path",
                        "description": "Id of cart, where order puts in",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "cart_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The order was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get one order by id",
                "description": "Returns object of order",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order": {
                                            "$ref": "#/components/schemas/Order"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update existing order",
                "description": "Returns updated order data",
                "operationId": "updateOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Ordered product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "path",
                        "description": "Quantity of ordered product units",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sum",
                        "in": "path",
                        "description": "Sum of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "cart_id",
                        "in": "path",
                        "description": "Id of cart, where order puts in",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "sum": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "cart_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The order was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete order by id",
                "description": "Deletes order by id",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The order was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of all posts",
                "description": "Returns list of posts",
                "operationId": "getAllPosts",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Add new post",
                "description": "Adds new post",
                "operationId": "addPost",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Post title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "Post content",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "Uploaded image path",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Some post title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Some post content"
                                    },
                                    "image_path": {
                                        "type": "string",
                                        "example": "Some post attachment path"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The post was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "post": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get one post by id",
                "description": "Returns object of post",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "post": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update existing post",
                "description": "Returns updated post data",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Post title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "Post content",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "Uploaded image path",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Some post title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Some post content"
                                    },
                                    "image_path": {
                                        "type": "string",
                                        "example": "Some post attachment path"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The post was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete post by id",
                "description": "Deletes post by id",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The post was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/product_categories": {
            "get": {
                "tags": [
                    "Product categories"
                ],
                "summary": "Get list of all product categories",
                "description": "Returns list of product categories",
                "operationId": "getAllProductCategories",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product categories"
                ],
                "summary": "Add new product category",
                "description": "Adds new product category",
                "operationId": "addProductCategory",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Product category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some Product Categoty"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The product category was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_category": {
                                            "$ref": "#/components/schemas/ProductCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/product_categories/{id}": {
            "get": {
                "tags": [
                    "Product categories"
                ],
                "summary": "Get one product category by id",
                "description": "Returns object of product category",
                "operationId": "getProductCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product_category": {
                                            "$ref": "#/components/schemas/ProductCategory"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product categories"
                ],
                "summary": "Update existing prodcut category",
                "description": "Returns updated prodcut category data",
                "operationId": "updateProductCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Product category name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some Product Categoty"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The product category was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductCategory"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product categories"
                ],
                "summary": "Delete product category by id",
                "description": "Deletes product category by id",
                "operationId": "deleteProductCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product category was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of all products",
                "description": "Returns list of products",
                "operationId": "getAllProducts",
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add new product",
                "description": "Adds new product",
                "operationId": "addProduct",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Product name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "Product description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "Uploaded image path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "weight",
                        "in": "path",
                        "description": "Product weight",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Product price",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Product category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The adding request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some product name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Some product description"
                                    },
                                    "image_path": {
                                        "type": "string",
                                        "example": "Some product image path"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": "300"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The product was created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get one product by id",
                "description": "Returns object of product",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update existing product",
                "description": "Returns updated product data",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Product name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "Product description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "image_path",
                        "in": "path",
                        "description": "Uploaded image path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "weight",
                        "in": "path",
                        "description": "Product weight",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Product price",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Product category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The updating request",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Some product name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Some product description"
                                    },
                                    "image_path": {
                                        "type": "string",
                                        "example": "Some product image path"
                                    },
                                    "weight": {
                                        "type": "string",
                                        "example": "100"
                                    },
                                    "price": {
                                        "type": "string",
                                        "example": "300"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The product was updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by id",
                "description": "Deletes product by id",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The product was deleted."
                    },
                    "401": {
                        "description": "Unauthorised"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Cart": {
                "title": "Cart",
                "description": "Cart model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "orders": {
                        "type": "collection"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Checkout": {
                "title": "Checkout",
                "description": "Checkout model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "cart_id": {
                        "type": "integer"
                    },
                    "checkout_state_id": {
                        "type": "integer"
                    },
                    "sum": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "CheckoutState": {
                "title": "CheckoutState",
                "description": "CheckoutState model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "product_id": {
                        "type": "integer"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "sum": {
                        "type": "integer"
                    },
                    "cart_id": {
                        "type": "integer"
                    },
                    "product": {
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post",
                "description": "Post model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "image_path": {
                        "type": "string"
                    },
                    "posting_time": {
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "image_path": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "orders_count": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "ProductCategory": {
                "title": "ProductCategory",
                "description": "ProductCategory model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "PizzGram API",
            "description": "API Endpoints of PizzGram"
        }
    ]
}